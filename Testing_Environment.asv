% 
% 
% 
% timestamps = wind_droplet_table{:,"dateTime"};
% interval = minutes(10);
% 
% fulltimestamps = (timestamps(1):interval:timestamps(end))';
% 
% missingTimestamps = setdiff(fulltimestamps, timestamps);
% 
% 
% % Code to generate a figure of the distribution of terminal velocities
% 
% imported_structure = struct2cell(load(append("Simulation_Data\Time_Series\",string(DT),"min_data_flatten.mat")));% Using the non-filtered data to match the joint FDF
% wind_droplet_table = imported_structure{1};
% d_bins = imported_structure{2};
% terminal_v_bins = [imported_structure{3} 11]; % The last index is added for the bin that exists to infinity. 
% 
% 
% % The diameters and velocities assosiated with each of the bins in svd 
% 
% 
% 
% svd = wind_droplet_table{:,svd_indexing};
% svdSize = size(svd);
% svd = reshape(svd', 20, 22, svdSize(1));  % Gives a matrix with terminal velocities on the first axis and Droplet diameters on the second
% 
% svd_total = sum(svd,3);
% 
% 
% dvd = wind_droplet_table{:,dvdIndexing};
% 
% droplet_velocities = sum(dvd,1);
% 
% 
% SpeedDropletPlot2(terminal_v_bins,d_bins,log10(svd_total),"");
% 
% 
% %plot(droplet_velocities)

% Reorder table

wind_droplet_table = wind_droplet_table;

% For the month of july
july_start_index = 180; % Start of the replacement data
july_end_index = 4642; % End of the replacement data
index_to_move = july_start_index:july_end_index;

index_to_insert = 43081; % Location where data is missing

rows_to_move = wind_droplet_table(index_to_move,:);
wind_droplet_table(index_to_move,:) = []; % Remove rows

% Adjust index as rows have been removed
index_to_insert = index_to_insert - length(index_to_move);

wind_droplet_table = [wind_droplet_table(1:index_to_insert, :); rows_to_move; wind_droplet_table(index_to_insert+1:end, :)];

% For the days in september

sep_start_index = 4651; % Start of the replacement data
sep_end_index = 5249; % End of the replacement data
index_to_move2 = sep_start_index:sep_end_index;

index_to_insert2 = 50592; % Location where data is missing

rows_to_move2 = wind_droplet_table(index_to_move2 - length(index_to_move),:);
wind_droplet_table(index_to_move2 - sum(index_to_move <= index_to_insert),:) = []; % Remove rows

% Adjust index as rows have been removed
index_to_insert2 = index_to_insert2 - sum(index_to_move2 <= index_to_insert2) - sum(index_to_move <= index_to_insert);

wind_droplet_table = [wind_droplet_table(1:index_to_insert2, :); rows_to_move2; wind_droplet_table(index_to_insert2+1:end, :)];